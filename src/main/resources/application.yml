spring:
  jpa:
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  datasource:
    hikari:
      maximum-pool-size: 4
      jdbc-url: ${DB_URL}
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      platform: postgres
      driver-class-name: org.postgresql.Driver
  data:
    redis:
        url: ${REDIS_URL}

  kafka:
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: SCRAM-SHA-256
      sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG}
    consumer:
      properties.spring.json.trusted.packages: "*"
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: alarm
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      ack-mode: MANUAL
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.enable.idempotence: false
    topic:
      alarm: alarm


jwt:
  secret-key: ${JWT_SECRET_KEY}
  #30 days
  token:
    expired-time-ms: ${JWT_TOKEN_EXPIRED_TIME_MS}
